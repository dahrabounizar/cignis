{
  "version": 3,
  "sources": ["../../workspace/netlify/functions/linkedin-profile.js"],
  "sourceRoot": "/tmp/tmp-2720-HrqAIezowyZd",
  "sourcesContent": ["export async function handler(event, context) {\n  if (event.httpMethod === 'OPTIONS') {\n    return {\n      statusCode: 200,\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n        'Access-Control-Allow-Methods': 'GET, POST, OPTIONS'\n      }\n    };\n  }\n\n  const { authorization } = event.headers;\n  \n  if (!authorization) {\n    return {\n      statusCode: 401,\n      body: JSON.stringify({ error: 'No authorization token' })\n    };\n  }\n\n  try {\n    const response = await fetch('https://api.linkedin.com/v2/userinfo', {\n      headers: {\n        'Authorization': authorization,\n        'LinkedIn-Version': '202312',\n        'Content-Type': 'application/json'\n      }\n    });\n    \n    const data = await response.json();\n    \n    return {\n      statusCode: 200,\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n      },\n      body: JSON.stringify(data)\n    };\n  } catch (error) {\n    return {\n      statusCode: 500,\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify({ error: 'Failed to fetch LinkedIn profile data' })\n    };\n  }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAsB,QAAQ,OAAO,SAAS;AAC5C,MAAI,MAAM,eAAe,WAAW;AAClC,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,SAAS;AAAA,QACP,+BAA+B;AAAA,QAC/B,gCAAgC;AAAA,QAChC,gCAAgC;AAAA,MAClC;AAAA,IACF;AAAA,EACF;AAEA,QAAM,EAAE,cAAc,IAAI,MAAM;AAEhC,MAAI,CAAC,eAAe;AAClB,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU,EAAE,OAAO,yBAAyB,CAAC;AAAA,IAC1D;AAAA,EACF;AAEA,MAAI;AACF,UAAM,WAAW,MAAM,MAAM,wCAAwC;AAAA,MACnE,SAAS;AAAA,QACP,iBAAiB;AAAA,QACjB,oBAAoB;AAAA,QACpB,gBAAgB;AAAA,MAClB;AAAA,IACF,CAAC;AAED,UAAM,OAAO,MAAM,SAAS,KAAK;AAEjC,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,QAC/B,gCAAgC;AAAA,MAClC;AAAA,MACA,MAAM,KAAK,UAAU,IAAI;AAAA,IAC3B;AAAA,EACF,SAAS,OAAO;AACd,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,MACjC;AAAA,MACA,MAAM,KAAK,UAAU,EAAE,OAAO,wCAAwC,CAAC;AAAA,IACzE;AAAA,EACF;AACF;",
  "names": []
}
