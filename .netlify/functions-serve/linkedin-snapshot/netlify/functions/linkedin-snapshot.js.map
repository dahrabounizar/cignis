{
  "version": 3,
  "sources": ["../../workspace/netlify/functions/linkedin-snapshot.js"],
  "sourceRoot": "/tmp/tmp-2720-PrBqWoquvIg1",
  "sourcesContent": ["export async function handler(event, context) {\n  if (event.httpMethod === \"OPTIONS\") {\n    return {\n      statusCode: 200,\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\",\n        \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\n      },\n    };\n  }\n\n  const { authorization } = event.headers;\n  const { domain } = event.queryStringParameters || {};\n\n  console.log(\"LinkedIn Snapshot Function - Domain:\", domain);\n  console.log(\n    \"LinkedIn Snapshot Function - Authorization header present:\",\n    !!authorization\n  );\n\n  if (!authorization) {\n    return {\n      statusCode: 401,\n      body: JSON.stringify({ error: \"No authorization token\" }),\n    };\n  }\n\n  try {\n    let url = \"https://api.linkedin.com/rest/memberSnapshotData?q=criteria\";\n    if (domain) {\n      url += `&domain=${domain}`;\n    }\n\n    console.log(\"LinkedIn Snapshot Function - Calling URL:\", url);\n\n    const response = await fetch(url, {\n      headers: {\n        Authorization: authorization,\n        \"LinkedIn-Version\": \"202312\",\n      },\n    });\n\n    console.log(\n      \"LinkedIn Snapshot Function - Response status:\",\n      response.status\n    );\n    console.log(\n      \"LinkedIn Snapshot Function - Response headers:\",\n      Object.fromEntries(response.headers.entries())\n    );\n\n    const data = await response.json();\n    console.log(\"LinkedIn Snapshot Function - Response data structure:\", {\n      hasElements: !!data.elements,\n      elementsLength: data.elements?.length || 0,\n      hasSnapshotData: !!data.elements?.[0]?.snapshotData,\n      snapshotDataLength: data.elements?.[0]?.snapshotData?.length || 0,\n      firstElementKeys: data.elements?.[0] ? Object.keys(data.elements[0]) : [],\n      firstSnapshotDataKeys: data.elements?.[0]?.snapshotData?.[0]\n        ? Object.keys(data.elements[0].snapshotData[0])\n        : [],\n    });\n\n    return {\n      statusCode: 200,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\",\n      },\n      body: JSON.stringify(data),\n    };\n  } catch (error) {\n    console.error(\"LinkedIn Snapshot Function - Error:\", error);\n    return {\n      statusCode: 500,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      body: JSON.stringify({\n        error: \"Failed to fetch LinkedIn snapshot data\",\n        details: error.message,\n      }),\n    };\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAsB,QAAQ,OAAO,SAAS;AAC5C,MAAI,MAAM,eAAe,WAAW;AAClC,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,SAAS;AAAA,QACP,+BAA+B;AAAA,QAC/B,gCAAgC;AAAA,QAChC,gCAAgC;AAAA,MAClC;AAAA,IACF;AAAA,EACF;AAEA,QAAM,EAAE,cAAc,IAAI,MAAM;AAChC,QAAM,EAAE,OAAO,IAAI,MAAM,yBAAyB,CAAC;AAEnD,UAAQ,IAAI,wCAAwC,MAAM;AAC1D,UAAQ;AAAA,IACN;AAAA,IACA,CAAC,CAAC;AAAA,EACJ;AAEA,MAAI,CAAC,eAAe;AAClB,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU,EAAE,OAAO,yBAAyB,CAAC;AAAA,IAC1D;AAAA,EACF;AAEA,MAAI;AACF,QAAI,MAAM;AACV,QAAI,QAAQ;AACV,aAAO,WAAW,MAAM;AAAA,IAC1B;AAEA,YAAQ,IAAI,6CAA6C,GAAG;AAE5D,UAAM,WAAW,MAAM,MAAM,KAAK;AAAA,MAChC,SAAS;AAAA,QACP,eAAe;AAAA,QACf,oBAAoB;AAAA,MACtB;AAAA,IACF,CAAC;AAED,YAAQ;AAAA,MACN;AAAA,MACA,SAAS;AAAA,IACX;AACA,YAAQ;AAAA,MACN;AAAA,MACA,OAAO,YAAY,SAAS,QAAQ,QAAQ,CAAC;AAAA,IAC/C;AAEA,UAAM,OAAO,MAAM,SAAS,KAAK;AACjC,YAAQ,IAAI,yDAAyD;AAAA,MACnE,aAAa,CAAC,CAAC,KAAK;AAAA,MACpB,gBAAgB,KAAK,UAAU,UAAU;AAAA,MACzC,iBAAiB,CAAC,CAAC,KAAK,WAAW,CAAC,GAAG;AAAA,MACvC,oBAAoB,KAAK,WAAW,CAAC,GAAG,cAAc,UAAU;AAAA,MAChE,kBAAkB,KAAK,WAAW,CAAC,IAAI,OAAO,KAAK,KAAK,SAAS,CAAC,CAAC,IAAI,CAAC;AAAA,MACxE,uBAAuB,KAAK,WAAW,CAAC,GAAG,eAAe,CAAC,IACvD,OAAO,KAAK,KAAK,SAAS,CAAC,EAAE,aAAa,CAAC,CAAC,IAC5C,CAAC;AAAA,IACP,CAAC;AAED,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,QAC/B,gCAAgC;AAAA,MAClC;AAAA,MACA,MAAM,KAAK,UAAU,IAAI;AAAA,IAC3B;AAAA,EACF,SAAS,OAAO;AACd,YAAQ,MAAM,uCAAuC,KAAK;AAC1D,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,MACjC;AAAA,MACA,MAAM,KAAK,UAAU;AAAA,QACnB,OAAO;AAAA,QACP,SAAS,MAAM;AAAA,MACjB,CAAC;AAAA,IACH;AAAA,EACF;AACF;",
  "names": []
}
